<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<meta http-equiv="content-type=" content="text/html; charset=UTF-8" />
<title></title>
<script type="text/javascript" src="http://code.jquery.com/jquery.min.js"></script>
<script src="//alasql.org/console/alasql.min.js"></script>
<link href="//code.google.com/apis/maps/documentation/javascript/examples/default.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="//maps.google.com/maps/api/js?libraries=geometry&sensor=false&language=en"></script>

<style>
    .map_canvas
    {
        width: 500px;
        height: 500px;
    }
</style>

<script type="text/javascript">
    var map;
    var iniLat = 39.97;
    var iniLng = -75.15;
    var iniZoom = 13;

    // variable to create marker
    var marker;

    // create marker lat and long
    var latitude;
    var longitude;

    var infowindow = new google.maps.InfoWindow();

    google.maps.visualRefresh = true;

    function initialize() {
        var lat = iniLat;
        var lon = iniLng;
        var myLatlng = new google.maps.LatLng(lat, lon);
        var mapOptions = {
            zoom: iniZoom, center: myLatlng, mapTypeId: google.maps.MapTypeId.ROADMAP,
            minZoom: 2
        }
        map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
        google.maps.event.addListener(map, "click", function (event) {
            latitude = event.latLng.lat();
            longitude = event.latLng.lng();
            console.log( latitude + ', ' + longitude );
            // Center map on new marker and get its lat long
            map.panTo(new google.maps.LatLng(latitude,longitude));
            map.setCenter(new google.maps.LatLng(latitude,longitude));
            var markerPos = map.getCenter();
            marker = new google.maps.Marker({
                position: markerPos
            });
            marker.setMap(map); 
            stopEdit();    
            $(document).ready(function(){
              $("#latitude").val(latitude);
            });   
            $(document).ready(function(){
              $("#longitude").val(longitude);
            }); 
        }); //end addListener
        var centerControlDiv = document.createElement('div');
        var centerControl = new CenterControl(centerControlDiv, map);

        centerControlDiv.index = 1;
        map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(centerControlDiv);
    }

    function stopEdit() {
        google.maps.event.clearListeners(map, "click");
    }

    function getCenter() {
        var c = map.getCenter();
        return ({ "latitude": c.lat(), "longitude": c.lng() });
    } // from Google Maps: Power Tools for Maximizing the API” Simple GIS tutorial

    function setCenter(lat, lon) {
        map.setCenter(new google.maps.LatLng(lat, lon));
    } // from Google Maps: Power Tools for Maximizing the API” Simple GIS tutorial  

    function tryAgain() {
      marker.setMap(null);
      $(document).ready(function(){
              $("#latitude").val(iniLat);
            });   
            $(document).ready(function(){
              $("#longitude").val(iniLng);
            });
      initialize();
    }

    function CenterControl(controlDiv, map) {

      // Set CSS for the control border.
      var controlUI = document.createElement('div');
      controlUI.style.backgroundColor = '#fff';
      controlUI.style.border = '2px solid #fff';
      controlUI.style.borderRadius = '3px';
      controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
      controlUI.style.cursor = 'pointer';
      controlUI.style.marginBottom = '22px';
      controlUI.style.textAlign = 'center';
      controlUI.title = 'Click to remove marker';
      controlDiv.appendChild(controlUI);

      // Set CSS for the control interior.
      var controlText = document.createElement('div');
      controlText.style.color = 'rgb(25,25,25)';
      controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
      controlText.style.fontSize = '11px';
      controlText.style.lineHeight = '38px';
      controlText.style.paddingLeft = '5px';
      controlText.style.paddingRight = '5px';
      controlText.innerHTML = 'Remove marker & try again';
      controlUI.appendChild(controlText);

      // Setup the click event listeners: simply set the map to Chicago.
      controlUI.addEventListener('click', function() {
        tryAgain();
      });

    }
</script> 
<div class="col-md-offset-2 col-md-8">
    <div class="panel panel-default">
      <%= form_for @post, html: { multipart: true } do |f| %>
        <div class="panel-heading">
          <h2>New Post</h2>
          <% if @post.errors.any? %>
            <div id="error_explanation">
              <h2><%= pluralize(@post.errors.count, "error") %> prohibited this post from being saved:</h2>
              <ul>
              <% @post.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
              </ul>
            </div>
          <% end %>
        </div>
        <div class="show panel-body">
          <div class="form-group">
            <%= f.label "Pick a Question" %><br>
            <%= f.collection_select(:question_id, Question.all, :id, :description, :required => true, class: "form-control") %>
          </div>
          <div class="form-group">
            <%= f.label "Answer" %><br>
            <%= f.text_area :description, :rows => "10", :required => true, class: "form-control" %>
          </div>
          <div class="form-group">
            <%= f.label :image %><br>
            <%= f.file_field :image, class: "form-control" %>
          </div>
          <div class="form-group">
            <%= f.hidden_field :latitude, :id=>"latitude", :required => true, class: "form-control" %>
          </div>
          <div class="form-group">
            <%= f.label "Location" %>
            <%= f.hidden_field :longitude, :id=>"longitude", :required => true, class: "form-control" %>
          </div>

          <p>Click the map to add a marker</p>
          <div id="map_canvas" style="width: 100%; height: 500px">
            <input type="button" class="mapButton" value="Try again" onClick="tryAgain()">
          </div> 
          <script>initialize();</script><br />
          <div class="actions">
            <%= f.submit class: "btn btn-primary" %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
